/**
 * Responsive Canvas Container Styles
 * 
 * These CSS classes help make the Klecks canvas responsive within containers.
 * Use these styles or adapt them to your specific layout needs.
 */

/* Basic responsive canvas container */
.klecks-canvas-container {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    min-width: 200px;
    min-height: 150px;
    background: #f0f0f0; /* Light gray background to show container bounds */
    border: 1px solid #ccc;
    overflow: auto; /* Allow scrolling if canvas is larger than container */
    box-sizing: border-box;
}

/* Full viewport canvas container */
.klecks-canvas-container.fullscreen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: 1000;
    background: #000;
}

/* Sidebar layout - canvas takes remaining space */
.klecks-canvas-container.sidebar-layout {
    height: calc(100vh - 60px); /* Account for header/toolbar */
    width: calc(100vw - 300px); /* Account for sidebar width */
}

/* Responsive canvas container that maintains aspect ratio */
.klecks-canvas-container.aspect-ratio-16-9 {
    width: 100%;
    height: 0;
    padding-bottom: 56.25%; /* 16:9 aspect ratio */
    position: relative;
}

.klecks-canvas-container.aspect-ratio-16-9 > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

/* Grid layout - canvas in a grid cell */
.klecks-canvas-container.grid-cell {
    grid-area: canvas; /* Assumes parent has defined grid areas */
    min-width: 0; /* Prevent overflow in CSS Grid */
    min-height: 0; /* Prevent overflow in CSS Grid */
}

/* Card/panel layout */
.klecks-canvas-container.card {
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    padding: 16px;
    background: white;
}

/* Ensures the canvas element itself is properly sized */
.klecks-canvas-container canvas {
    max-width: 100%;
    max-height: 100%;
    width: auto !important;
    height: auto !important;
    display: block;
}

/* Dark theme variation */
.klecks-canvas-container.dark {
    background: #2d2d2d;
    border-color: #444;
}

.klecks-canvas-container.dark canvas {
    border: 2px solid #555;
}

/* Mobile-friendly responsive container */
@media (max-width: 768px) {
    .klecks-canvas-container {
        min-width: 150px;
        min-height: 100px;
    }
    
    .klecks-canvas-container.sidebar-layout {
        width: 100vw;
        height: calc(100vh - 120px); /* More space for mobile UI */
    }
}

/* Print-friendly styles */
@media print {
    .klecks-canvas-container {
        background: white;
        border: none;
        overflow: visible;
    }
}

/**
 * Usage Examples:
 * 
 * <!-- Basic responsive container -->
 * <div class="klecks-canvas-container" id="canvas-area"></div>
 * 
 * <!-- Fullscreen canvas -->
 * <div class="klecks-canvas-container fullscreen" id="canvas-area"></div>
 * 
 * <!-- Canvas in a sidebar layout -->
 * <div class="klecks-canvas-container sidebar-layout" id="canvas-area"></div>
 * 
 * <!-- Canvas with fixed aspect ratio -->
 * <div class="klecks-canvas-container aspect-ratio-16-9" id="canvas-area"></div>
 * 
 * To use with the CanvasApiBridge:
 * 
 * const containerEl = document.getElementById('canvas-area');
 * containerEl.appendChild(canvasApi.getCanvasElement());
 * 
 * // Optional: Auto-fit canvas to container
 * canvasApi.fitCanvasToContainer(containerEl);
 */
